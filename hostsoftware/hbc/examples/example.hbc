# example.hbc

include std_eid.hbh;
include toggle.hbh;

###############################################################################
# This is the "main program". The file starts out with a list of known        #
# devices, giving them aliases through which they can be addressed in the     #
# rest of the program. This device list could also be autogenerated and put   #
# into some header file.                                                      #
###############################################################################

alias sensorbox {
	ip fe80::50:c4ff:fe04:8099;
	eids { 3, 5, 29 };
}

alias heater {
	ip fe80:0:0:0:50:c4ff:fe04:8098;
	endpoint 98 { datatype UINT8; name heater; access write; }; # "device-local" endpoint def. -- overrides global def.
	eids { 98 };
}

alias lightswitch {
	ip fe80::50:c4ff:fe04:8097;
	eids { 24, 25 };
}

alias lightswitch2 {
	ip fe80::50:c4ff:fe04:8095;
	eids { 24, 25 };
}

alias lamp {
	ip fe80::50:c4ff:fe04:8096;
	eids { 1 };
}


###############################################################################
# Now follows the actual behaviour definition.                                #
###############################################################################

main {
# "if-then-else if-else"-statements
  if(sensorbox.temperature < 19) {
    heater.heater := 100;
  } else if(sensorbox.temperature >= 19 && sensorbox.temperature < 22) {
    heater.heater := 50;
  } else {
    heater.heater := 0;
  }
}

# using a predefined module
toggle(lightswitch.clicked, 2, lamp.on);
toggle(lightswitch2.clicked, 2, lamp.on);
